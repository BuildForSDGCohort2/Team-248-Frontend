{"version":3,"sources":["routes/History.js","utils/LazyLoaded.js","routes/Routes.js","containers/App.js","store/reducers/Lang.js","store/reducers/index.js","store/types/index.js","store/index.js","index.js"],"names":["createBrowserHistory","Home","React","lazy","ForgetPassword","CreateOffer","Routes","fallback","history","path","exact","from","to","App","Component","INITIAL_STATE","lang","localStorage","getItem","combineReducers","locale","state","action","type","saga","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reducers","addLocaleData","en","ar","ReactDOM","render","document","querySelector"],"mappings":"8SACeA,gBCCFC,EAAOC,IAAMC,MAAK,kBAAM,iCACxBC,EAAiBF,IAAMC,MAAK,kBACvC,uDAEWE,EAAcH,IAAMC,MAAK,kBACpC,8DCWaG,EAZb,kBAAC,WAAD,CAAUC,SAAU,cAClB,kBAAC,IAAD,CAAQC,QAASA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAoBC,KAAK,IAAIC,OAAK,IAClC,kBAAC,EAAD,CAA8BD,KAAK,mBAAmBC,OAAK,IAC3D,kBAAC,EAAD,CAA2BA,OAAK,EAACD,KAAK,kBACtC,kBAAC,IAAD,CAAUE,KAAK,IAAIC,GAAG,SCKfC,G,6KATX,OACE,oCACE,kBAAC,IAAD,CAAQL,QAASA,GAAUF,Q,GAJjBQ,c,uBCJZC,EAAgB,CACpBC,KAAMC,aAAaC,QAAQ,SAAW,MCAzBC,kBAAgB,CAC3BC,ODEW,WAAgD,IAAhCC,EAA+B,uDAAvBN,EAAeO,EAAQ,uCAE5D,OAAQA,EAAOC,MACb,IET4B,mBFU1B,OAAO,2BAAKF,GAAZ,IAAmBL,KAAMM,EAAON,OAClC,IEV4B,mBFY5B,QACE,OAAOK,M,QGTPG,EAAOC,cAOPC,GALc,kBAAXC,QACLA,OAAOC,qCACPD,OAAOC,qCAAqC,IACvCC,KAGPC,YAAgBN,IAMHO,EAJDC,YAAYC,EAAUP,G,wBCNpCQ,YAAcC,GACdD,YAAcE,GAEdC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,OAEFQ,SAASC,cAAc,Y","file":"static/js/main.8907fa44.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\r\n\r\nexport const Home = React.lazy(() => import(\"../containers/Home/Home\"));\r\nexport const ForgetPassword = React.lazy(() =>\r\n  import(\"../containers/ForgetPassword/ForgetPassword\")\r\n);\r\nexport const CreateOffer = React.lazy(() =>\r\n  import(\"../components/CreateOffer/CreateOffer\")\r\n);\r\n","import React, { Suspense } from \"react\";\r\nimport { Router, Switch, Redirect } from \"react-router-dom\";\r\nimport history from \"./History\";\r\nimport * as LazyComponent from \"../utils/LazyLoaded\";\r\n\r\nconst Routes = (\r\n  <Suspense fallback={\"loading...\"}>\r\n    <Router history={history}>\r\n      <Switch>\r\n        <LazyComponent.Home path=\"/\" exact />\r\n        <LazyComponent.ForgetPassword path=\"/forget-password\" exact />\r\n        <LazyComponent.CreateOffer exact path=\"/create-offer\" />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  </Suspense>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport history from \"../routes/History\";\r\nimport Routes from \"../routes/Routes\";\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router history={history}>{Routes}</Router>\r\n        {/* <Home /> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import * as types from \"../types\";\r\n\r\nconst INITIAL_STATE = {\r\n  lang: localStorage.getItem(\"lang\") || \"en\"\r\n};\r\n\r\nexport default function locale(state = INITIAL_STATE, action) {\r\n  \r\n  switch (action.type) {\r\n    case types.SET_CURRENT_LANG:\r\n      return { ...state, lang: action.lang };\r\n    case types.GET_CURRENT_LANG:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport locale from \"./Lang\";\r\n\r\nexport default combineReducers({\r\n    locale\r\n})","export const SET_CURRENT_LANG = \"SET_CURRENT_LANG\";\r\nexport const GET_CURRENT_LANG = \"GET_CURRENT_LANG\";\r\n\r\nexport const FETCH_DATA_REQUEST = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA = \"FETCH_DATA\";","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n// import { watchAll } from \"../sagas\";\r\n// ======== Compose redux dev tool with applyMiddleware ========\r\nconst saga = createSagaMiddleware();\r\nconst composeEnhancers =\r\n  typeof window === \"object\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(saga),\r\n);\r\nconst store = createStore(reducers, enhancer);\r\n\r\n// saga.run(watchAll);\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { addLocaleData } from \"react-intl\";\r\nimport * as en from \"react-intl/locale-data/en\";\r\nimport * as ar from \"react-intl/locale-data/ar\";\r\n\r\naddLocaleData(en);\r\naddLocaleData(ar);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}