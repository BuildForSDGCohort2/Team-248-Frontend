{"version":3,"sources":["components/CopyRight.js","components/CustomSnackbar.js","components/CreateOffer/DatePicker.js","components/CreateOffer/InputError.js","components/CreateOffer/OfferForm.js","components/CreateOffer/CreateOffer.js"],"names":["Copyright","variant","color","align","href","Date","getFullYear","CustomSnackbar","anchorOrigin","handleClose","open","message","keyProp","autoHideDuration","onClose","severity","DatePicker","label","value","onChange","Box","width","mb","utils","DateFnsUtils","id","inputVariant","format","KeyboardButtonProps","InputError","name","render","style","min","minDate","getMonth","getDate","max","initialValues","startDate","endDate","pricePerHour","address","qualifications","validationSchema","object","date","default","required","number","string","OfferForm","onSubmit","a","values","setFieldValue","FormGroup","as","type","TextField","mt","my","Button","fullWidth","CreateOffer","state","snackbar","vertical","horizontal","handleOpenSnackbar","setState","handleCloseSnackbar","Grid","container","direction","alignItems","justify","minHeight","item","xs","Typography","CssBaseline","this","Component"],"mappings":"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","file":"static/js/6.0d693db4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nexport default function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Bebejo\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport const CustomSnackbar = ({anchorOrigin, handleClose, open, keyProp, message}) => {\r\n    return (\r\n          <Snackbar \r\n            anchorOrigin={ anchorOrigin } \r\n            open={open} \r\n            autoHideDuration={6000} \r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              {message}\r\n            </Alert>\r\n          </Snackbar>\r\n      );\r\n};\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  // KeyboardTimePicker,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nconst DatePicker = ({ label, value, onChange }) => {\r\n  return (\r\n    <Box width=\"100%\" mb={2}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          id=\"data-picker-dialog\"\r\n          label={label}\r\n          inputVariant=\"outlined\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={value}\r\n          onChange={onChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\"\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","import React from \"react\";\r\nimport { ErrorMessage } from \"formik\";\r\nconst InputError = ({ name, message }) => {\r\n  return (\r\n    <ErrorMessage\r\n      name={name}\r\n      render={() => (\r\n        <div id={`invalid-${name}`} style={{ color: \"#FF0000\" }}>\r\n          {message}\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputError;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { number, object, string, date } from \"yup\";\r\nimport { Button, Box, TextField, FormGroup } from \"@material-ui/core\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport InputError from \"./InputError\";\r\n\r\nconst min = new Date();\r\nconst minDate = `${min.getMonth() + 1}/${min.getDate()}/${min.getFullYear()}`;\r\nconst max = new Date();\r\n\r\nconst initialValues = {\r\n  startDate: null,\r\n  endDate: null,\r\n  pricePerHour: null,\r\n  address: null,\r\n  qualifications: null\r\n};\r\nconst validationSchema = object({\r\n  startDate: date()\r\n    .default(new Date(min))\r\n    .min(min, `Start date should be equal or later than ${minDate}`)\r\n    .required(\"Start date is required\"),\r\n  endDate: date()\r\n    .default(new Date(max))\r\n    .min(min, `End date should be equal or later than ${minDate}`)\r\n    .required(\"End date is required\"),\r\n  pricePerHour: number()\r\n    .required(\"Price per hour is required\")\r\n    .min(1, \"You can not choose a price less than 1$ per hour\"),\r\n  address: string()\r\n    .min(5)\r\n    .required(\"Your address is required\"),\r\n  qualifications: string().min(20)\r\n});\r\n\r\nconst OfferForm = () => {\r\n  return (\r\n    <Formik\r\n      validationSchema={validationSchema}\r\n      initialValues={initialValues}\r\n      onSubmit={async ({ values }) => {\r\n        // let submitted = false;\r\n        // submitted = values;\r\n      }}\r\n    >\r\n      {({ values, setFieldValue }) => (\r\n        <Form id=\"create-offer-form\">\r\n          <FormGroup>\r\n            <Field\r\n              id=\"create-offer-startDate\"\r\n              as={DatePicker}\r\n              name=\"startDate\"\r\n              label=\"Start date\"\r\n              value={values.startDate}\r\n              onChange={(value) => setFieldValue(\"startDate\", value)}\r\n            />\r\n            <InputError name=\"startDate\" message=\"Invalid start date\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Field\r\n              id=\"create-offer-endDate\"\r\n              as={DatePicker}\r\n              name=\"endDate\"\r\n              label=\"End date\"\r\n              value={values.endDate}\r\n              onChange={(value) => setFieldValue(\"endDate\", value)}\r\n            />\r\n            <InputError name=\"endDate\" message=\"Invalid end date\" />\r\n          </FormGroup>\r\n          <Box width=\"100%\" mb={2}>\r\n            <FormGroup>\r\n              <Field\r\n                id=\"create-offer-pricePerHour\"\r\n                variant=\"outlined\"\r\n                name=\"pricePerHour\"\r\n                type=\"number\"\r\n                as={TextField}\r\n                label=\"Price per hour\"\r\n              />\r\n              <InputError name=\"pricePerHour\" message=\"Invalid price\" />\r\n            </FormGroup>\r\n          </Box>\r\n          <Box width=\"100%\" mb={2} mt={2}>\r\n            <FormGroup>\r\n              <Field\r\n                id=\"create-offer-address\"\r\n                variant=\"outlined\"\r\n                name=\"address\"\r\n                type=\"text\"\r\n                as={TextField}\r\n                label=\"Your address\"\r\n              />\r\n              <InputError name=\"address\" message=\"Invalid address\" />\r\n            </FormGroup>\r\n          </Box>\r\n          <Box width=\"100%\" mb={2} mt={2}>\r\n            <FormGroup>\r\n              <Field\r\n                id=\"create-offer-qualifications\"\r\n                variant=\"outlined\"\r\n                name=\"qualifications\"\r\n                type=\"text\"\r\n                as={TextField}\r\n                label=\"prefered qualifications\"\r\n              />\r\n              <InputError name=\"qualifications\" message=\"Invalid text\" />\r\n            </FormGroup>\r\n          </Box>\r\n          <Box width=\"100%\" my={2}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default OfferForm;\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Box, CssBaseline, Grid } from \"@material-ui/core\";\r\nimport { CustomSnackbar } from \"../CustomSnackbar\";\r\nimport OfferForm from \"./OfferForm\";\r\nimport Copyright from \"../CopyRight\";\r\n\r\n// const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n// const required = value => (value ? undefined : \"Required\");\r\n\r\nclass CreateOffer extends Component {\r\n  state = {\r\n    snackbar: {\r\n      open: false,\r\n      vertical: \"top\",\r\n      horizontal: \"center\"\r\n    }\r\n  };\r\n\r\n  handleOpenSnackbar = () => {\r\n    this.setState({\r\n      snackbar: {\r\n        ...this.state.snackbar,\r\n        open: true\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCloseSnackbar = () => {\r\n    this.setState({\r\n      snackbar: {\r\n        ...this.state.snackbar,\r\n        open: false\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h3\">Create Offer</Typography>\r\n          <CssBaseline />\r\n          <CustomSnackbar\r\n            anchorOrigin={{\r\n              vertical: this.state.snackbar.vertical,\r\n              horizontal: this.state.snackbar.horizontal\r\n            }}\r\n            open={this.state.snackbar.open}\r\n            handleClose={this.handleCloseSnackbar}\r\n            message=\"Email has been sent Successfully\"\r\n            keyProp={\r\n              this.state.snackbar.vertical + this.state.snackbar.horizontal\r\n            }\r\n          />\r\n          <OfferForm />\r\n          <Box mt={8}>\r\n            <Copyright />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateOffer;\r\n"],"sourceRoot":""}